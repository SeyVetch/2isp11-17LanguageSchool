//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LanguageSchool.EF
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    
    public partial class Client
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Client()
        {
            this.ServiceHistory = new HashSet<ServiceHistory>();
            this.Tag = new HashSet<Tag>();
        }
    
        public int IdClient { get; set; }
        public string LName { get; set; }
        public string FName { get; set; }
        public string MName { get; set; }
        public int IdGender { get; set; }
        public string Phone { get; set; }
        public string PhotoPath { get; set; }
        public System.DateTime BirthDate { get; set; }
        public string Email { get; set; }
        public System.DateTime RegistrationDate { get; set; }
        public virtual string RegDate
        {
            get
            {
                return RegistrationDate.Date.ToString().Split()[0];
            }       
        }
        public virtual string Fio
        {
            get
            {
                return LName + " " + FName + " " + MName;
            }
        }
        public virtual string LastVisit
        {
            get
            {
                EF.ServiceHistory SH = ServiceHistory.Where(i => i.IdClient == IdClient).OrderByDescending(i => i.StartTime).FirstOrDefault();
                DateTime? res = null;
                if (SH != null)
                {
                    res = SH.StartTime.Date;
                }
                return res.ToString().Split()[0];
            }
        }
        public virtual int TotalVisits
        {
            get
            {
                return ServiceHistory.Where(i => i.IdClient == IdClient).Count();
            }
        }
        public virtual List<vw_ClientsTags> Tags
        {
            get
            {
                return ClassHelper.AppData.Context.vw_ClientsTags.Where(i => i.Client == IdClient).ToList();
            }
        }


        public virtual Gender Gender { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ServiceHistory> ServiceHistory { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Tag> Tag { get; set; }
    }
}
